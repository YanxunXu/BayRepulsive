% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BayRepulsive.R
\name{BayRepulsive_unknown}
\alias{BayRepulsive_unknown}
\title{BayRepulsive_unknown is a deconvolution function designed for inferring tumor heterogeneity,
when the number of subclones is unknown.}
\source{
BayRepulsive: A Bayesian Repulsive Deconvolution Model for Inferring Tumor Heterogeneity
}
\usage{
BayRepulsive_unknown(DATA, K_min, K_max, Nobs, Nfeature,
                      Niter = 100, epsilon = 0.0001, tau = 100,
                      a.theta = 0.01, b.theta = 0.01, seed = 1 )
}
\arguments{
\item{DATA}{The observed data matrix. Each row represents a feature (gene); each column represents a sample.}

\item{K_min}{The minimum number of subclones.}

\item{K_max}{The Maximum number of subclones.}

\item{Nobs}{The number of samples, i.e., the number of columns of the \code{DATA}.}

\item{Nfeature}{The number of features, i.e., the number of rows of the \code{DATA}.}

\item{Niter}{The number of maximum iterations.}

\item{epsilon}{Tolerance for convergence. We determine whether to break based on the estimated weight matrix.
We decide to break if the distance induced by L2 norm between two successive estimated weight matrices is less than epsilon.}

\item{tau}{The hyperparameter for DPP. A large number is preferred. See \code{\link{BayRepulsive_known}} for more detials.}

\item{a.theta}{The hyperparameter for DPP. See \code{\link{BayRepulsive_known}} for more detials.}

\item{b.theta}{The hyperparameter for DPP. See \code{\link{BayRepulsive_known}} for more detials.}

\item{seed}{The random seed.}
}
\value{
A list of following components:
\tabular{llllllllllllll}{
\tab \code{Z} \tab  \tab  \tab    The estimated subclone-specific expression matrix.\tab  \tab  \tab \tab  \tab  \tab \tab  \tab  \tab    \cr
\tab \code{W} \tab  \tab  \tab    The estimated weight matrix. \tab  \tab  \tab \tab  \tab  \tab  \tab  \tab  \tab  \cr
\tab \code{K_hat} \tab  \tab  \tab    The number of estimated subclones.\tab  \tab  \tab  \tab  \tab  \tab \tab  \tab  \tab
}
}
\description{
This function gives the estimated number of subclones, along with deconvolution results of the observed matrix.
}
\details{
Given an observed matrix, whose columns are mixed samples of unknown number of subclones,
this function gives an estimation of number of subclones along with deconvolution results.

We first use the algorithm in \code{\link{BayRepulsive_known}} to fit the data for every possible number of subclones.
Let \eqn{S(k)} denote the square sum of the residuals when the number of subclones is fixed at \eqn{k}.
We define the second-order finite difference \eqn{\Delta^2 S(k)}{Delta^2 S(k)} of the residual by
\eqn{\Delta^2S(k) = [S(k+1)-S(k)]-[S(k)-S(k-1)]}{Delta^2(k) = [S(k+1)-S(k)]-[S(k)-S(k-1)]}, for \eqn{k=K_{min}+1,\dots,K_{max}-1}{k=Kmin+1,...,Kmax-1}.
Then the optimal \eqn{\hat{K}} estimated by BayRepulsive is
\deqn{\hat{K}=\mathrm{arg max}_k \Delta^2 S(k).}{\hat{K} = argmin Delta^2 S(k).}
And the deconvolution results are the corresponding results when the number of subclones is fixed at \eqn{\hat{K}}.
}
\examples{
rm(list=ls())
library(BayRepulsive)
data(CCLE)
set.seed(1)
Nobs     <- 24
Nfeature <- 100
K0       <- 3
### randomly generate weight matrix W for 24 mixing samples
W        <- matrix(0,nrow = K0, ncol = Nobs)
for(i in 1:Nobs){
  Theta <- rgamma(K0,1/K0,1)
  W[,i] <- Theta/sum(Theta)
}
### add some noise
error    <- t(matrix(rnorm(Nfeature * Nobs, mean = 0, sd = 0.5), nrow = Nobs))
DATA     <- CCLE$Z\%*\%W + error
### Note: please make sure that there are no negative values after adding the noise
result1  <- BayRepulsive_unknown(DATA = DATA, K_min = 2, K_max = 6, Nobs = Nobs,
                                 Nfeature = Nfeature)
cor(as.vector(result1$W), as.vector(W))
}
\seealso{
\code{\link{BayRepulsive_known}}
}
\keyword{functions}
